name: Blue-Green Deployment

on:
    push:

jobs:
    build-and-push:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout Repository
              uses: actions/checkout@v3

            - name: Set Image Tag
              run: echo "TAG=$(echo ${GITHUB_SHA:-latest} | cut -c1-7)" >> $GITHUB_ENV

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2

            - name: Debug Environment Variables
              run: echo "TAG=${{ env.TAG }}"  # ✅ TAG 값 확인

            - name: Login to GitHub Container Registry
              run: echo "${{ secrets.GHCR_PAT }}" | docker login ghcr.io -u "${{ secrets.REPOSITORY_OWNER }}" --password-stdin

            - name: Build and push Docker image
              run: |
                  docker buildx build \
                    --platform linux/amd64 \
                    --push \
                    -t ghcr.io/${{ secrets.REPOSITORY_OWNER }}/community-server:${{ env.TAG }} \
                    -t ghcr.io/${{ secrets.REPOSITORY_OWNER }}/community-server:latest .

    deploy:
        needs: [build-and-push]
        runs-on: ubuntu-latest
        steps:
            - name: Prepare SSH Key
              run: |
                  echo "${{ secrets.EC2_SSH_KEY }}" | base64 --decode > key.pem
                  chmod 600 key.pem

            - name: SSH into EC2 and Deploy
              run: |
                  HOST=${{ secrets.EC2_HOST }}
                  USER=${{ secrets.EC2_USER }}

                  ssh -o StrictHostKeyChecking=no -i key.pem $USER@$HOST << 'EOF'
                    set -e

                    echo "🔍 현재 실행 중인 컨테이너 확인"
                    ACTIVE_CONTAINER=$(docker ps --format '{{.Names}}' | grep -E 'blue|green' || echo 'blue')

                    if [ "$ACTIVE_CONTAINER" == "blue" ]; then
                      NEW_VERSION="green"
                      OLD_VERSION="blue"
                    else
                      NEW_VERSION="blue"
                      OLD_VERSION="green"
                    fi

                    echo "🚀 새로운 컨테이너 배포: $NEW_VERSION"

                    TAG=${{ env.TAG }}  # ✅ TAG 값을 명확히 설정

                    echo "태그는 ? $TAG"
                    echo "${{ secrets.GHCR_PAT }}" | docker login ghcr.io -u "${{ secrets.REPOSITORY_OWNER }}" --password-stdin
                    docker pull ghcr.io/${{ secrets.REPOSITORY_OWNER }}/community-server:$TAG  # ✅ TAG를 올바르게 사용
    EOF

- name: Clean up SSH Key
  run: rm -f key.pem